{"remainingRequest":"/home/devue/myItem/vuepress-blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/devue/myItem/vuepress-blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/devue/myItem/vuepress-blog/node_modules/vue-loader/lib/index.js??ref--1-1!/home/devue/myItem/vuepress-blog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/home/devue/myItem/vuepress-blog/docs/technical-summary/node/README.md?vue&type=template&id=148e23a8&","dependencies":[{"path":"/home/devue/myItem/vuepress-blog/docs/technical-summary/node/README.md","mtime":1550460402240},{"path":"/home/devue/myItem/vuepress-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/devue/myItem/vuepress-blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/devue/myItem/vuepress-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/devue/myItem/vuepress-blog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/devue/myItem/vuepress-blog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"node\\\"><a href=\\\"#node\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> NODE</h1> <h2 id=\\\"ubuntu-mongo-connect-failed\\\"><a href=\\\"#ubuntu-mongo-connect-failed\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> ubuntu mongo connect failed</h2> <p>执行mongo,报错如下：</p> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>./mongo\\nMongoDB shell version v4.0.0\\nconnecting to: mongodb://127.0.0.1:27017\\n2018-07-30T14:24:00.807+0800 E QUERY    [js] Error: couldn't connect to server 127.0.0.1:27017, connection attempt failed: SocketException: Error connecting to 127.0.0.1:27017 :: caused by :: Connection refused :\\nconnect@src/mongo/shell/mongo.js:251:13\\n@(connect):1:6\\nexception: connect failed\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br></div></div><p>是没有执行mongod,就直接执行mongo，才会报错</p> <p>操作：</p> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>sudo ./mongod  -dbpath /data/db/\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br></div></div><p>./mongo\\n#都在mongodb的bin目录下</p> <h2 id=\\\"npm-install-save-和-save-dev\\\"><a href=\\\"#npm-install-save-和-save-dev\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> NPM install -save 和 -save-dev</h2> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>npm install moduleName # 安装模块到项目目录下\\n \\nnpm install -g moduleName # -g 的意思是将模块安装到全局，具体安装到磁盘哪个位置，要看 npm config prefix 的位置。\\n \\nnpm install -save moduleName # -save 的意思是将模块安装到项目目录下，并在package文件的dependencies节点写入依赖。\\n \\nnpm install -save-dev moduleName # -save-dev 的意思是将模块安装到项目目录下，并在package文件的devDependencies节点写入依赖。\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br></div></div><h2 id=\\\"linux下升级npm以及node\\\"><a href=\\\"#linux下升级npm以及node\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> linux下升级npm以及node</h2> <h3 id=\\\"npm升级\\\"><a href=\\\"#npm升级\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> npm升级</h3> <p>废话不多说，直接讲步骤。先从容易的开始，升级npm。</p> <p>npm这款包管理工具虽然一直被人们诟病，很多人都推荐使用yarn，但其使用人数还是不见减少，况且npm都是随node同时安装好的，一时让我抛弃它，还是有点难做到。</p> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>npm i -g npm\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br></div></div><p>是的，你没看错。升级npm只需要像安装其它包一样install一下就行，windows和linux下都可以通过此方式进行升级，你还能指定npm的版本。</p> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>npm i -g npm@5.0.0\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br></div></div><h3 id=\\\"node升级\\\"><a href=\\\"#node升级\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> node升级</h3> <p>node升级相对于npm来说就复杂一点了。</p> <ol><li>首先通过npm安装node的版本管理工具“n“，不用惊讶，名字就是这么简单，就叫n。据了解，n是node下的一个模块，作者是Express框架的开发者。</li></ol> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>npm i -g n\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br></div></div><ol start=\\\"2\\\"><li>检查n模块</li></ol> <p>先查看系统node的安装路径，n模块的默认路径为 ‘/usr/local’。</p> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>$ which node\\n\\n/data/home/server/nodejs/bin/node   #举个例子\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br></div></div><p>如果路径与n模块的默认路径相同可以跳过3步骤。</p> <ol start=\\\"3\\\"><li>通过N_PREFIX变量来修改 n 的默认node安装路径。</li></ol> <ul><li>编辑环境配置文件</li></ul> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>vim ~/.bash_profile   \\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br></div></div><ul><li>将下面两行代码插入到文件末尾</li></ul> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>export N_PREFIX=/data/home/server/nodejs #node实际安装位置\\nexport PATH=$N_PREFIX/bin:$PATH\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br></div></div><ul><li>:wq保存退出；</li></ul> <p>执行source使修改生效。</p> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>$ source ~/.bash_profile\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br></div></div><ul><li>确认一下环境变量是否生效。</li></ul> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>echo $N_PREFIX\\n/data/home/server/nodejs\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br></div></div><ol start=\\\"4\\\"><li>n模块常用命令</li></ol> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>Commands:\\n\\n  n                              Output versions installed\\n  n latest                       Install or activate the latest node release\\n  n -a x86 latest                As above but force 32 bit architecture\\n  n stable                       Install or activate the latest stable node release\\n  n lts                          Install or activate the latest LTS node release\\n  n &lt;version&gt;                    Install node &lt;version&gt;\\n  n use &lt;version&gt; [args ...]     Execute node &lt;version&gt; with [args ...]\\n  n bin &lt;version&gt;                Output bin path for &lt;version&gt;\\n  n rm &lt;version ...&gt;             Remove the given version(s)\\n  n prune                        Remove all versions except the current version\\n  n --latest                     Output the latest node version available\\n  n --stable                     Output the latest stable node version available\\n  n --lts                        Output the latest LTS node version available\\n  n ls                           Output the versions of node available\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br><span class=\\\"line-number\\\">12</span><br><span class=\\\"line-number\\\">13</span><br><span class=\\\"line-number\\\">14</span><br><span class=\\\"line-number\\\">15</span><br><span class=\\\"line-number\\\">16</span><br></div></div><ul><li>安装node最新版本</li></ul> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>n latest\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br></div></div><ul><li>安装稳定版</li></ul> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>n stable\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br></div></div><ul><li>安装指定版本</li></ul> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>n v7.10.0\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br></div></div><ul><li>查看已安装版本</li></ul> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>n\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br></div></div><ul><li>删除指定版本</li></ul> <div class=\\\"language- line-numbers-mode\\\"><pre class=\\\"language-text\\\"><code>n rm 6.4.0\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br></div></div>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}